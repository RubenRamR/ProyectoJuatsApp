/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Chat;

import DTO.ChatDTO;
import DTO.UsuarioDTO;
import DocsDTO.MensajeDTO;
import LogIn.*;
import Negocio.ChatNegocio;
import java.awt.Color;
import java.io.File;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.border.Border;
import Negocio.UsuarioNegocio;
import Utilerias.ImageRenderer2;
import excepciones.NegocioException;
import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.bson.types.ObjectId;

/**
 *
 * @author santi
 */
public class frmVerDetalles extends javax.swing.JFrame {

    UsuarioNegocio usuarioNegocio;
    ChatNegocio chatNegocio;
    UsuarioDTO u;
    private ObjectId chatIdSel;
    DefaultTableModel modeloTabla;
    private List<ObjectId> integrantesActuales;
    private List<MensajeDTO> mensajesActuales;

    /**
     * Creates new form LogIn
     */
    public frmVerDetalles(UsuarioNegocio usuarioNegocio, ChatNegocio chatNegocio, UsuarioDTO u) {
        initComponents();
        this.setLocationRelativeTo(this);
        this.usuarioNegocio = usuarioNegocio;
        this.chatNegocio = chatNegocio;
        this.u = u;
        configurarComboBoxChats();
        configurarTablaChats();

        integrantesActuales = new ArrayList<>();
        mensajesActuales = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JButton();
        fldNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnEncontrarImagen = new javax.swing.JButton();
        ChatsComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        tbl = new javax.swing.JScrollPane();
        tblChatsFotos4 = new javax.swing.JTable();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(700, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.setBackground(new java.awt.Color(153, 230, 153));

        Color customColor = new Color(35, 135, 35);
        Border lineBorder = BorderFactory.createLineBorder(customColor, 2);
        Color customColor2 = new Color(0, 113, 219);
        Color customColor3 = new Color(78, 160, 237);
        Border lineBorder2 = BorderFactory.createLineBorder(customColor2, 2);
        btnGuardar.setBorder(lineBorder2);
        btnGuardar.setBackground(customColor3);
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btnGuardar.setText("Guardar cambios");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 430, 320, 50));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 64)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Detalles");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, -1));

        btnCerrar.setBackground(Color.red);
        btnCerrar.setText("X");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        fldNombre.setBorder(lineBorder);
        fldNombre.setBackground(new java.awt.Color(186, 219, 186));
        fldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fldNombreActionPerformed(evt);
            }
        });
        jPanel1.add(fldNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 230, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Chats:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 160, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Imagen de Perfil ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 210, 230, -1));

        btnEncontrarImagen.setBorder(lineBorder2);
        btnEncontrarImagen.setBackground(customColor3);
        btnEncontrarImagen.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        btnEncontrarImagen.setText("Encontrar Imagen");
        btnEncontrarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncontrarImagenActionPerformed(evt);
            }
        });
        jPanel1.add(btnEncontrarImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 370, 110, 20));

        ChatsComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ChatsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChatsComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(ChatsComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 160, 60));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Nombre");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 230, -1));

        tblChatsFotos4.setTableHeader(null);
        tblChatsFotos4.setRowHeight(105);
        tblChatsFotos4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        tbl.setViewportView(tblChatsFotos4);

        jPanel1.add(tbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 130, 110));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        String nuevoNombre = fldNombre.getText();

        if (chatIdSel == null)
        {
            JOptionPane.showMessageDialog(this, "Por favor selecciona un chat.");
            return;
        }

        try
        {
            ChatDTO chatActualizado = new ChatDTO();
            chatActualizado.setId(chatIdSel);
            chatActualizado.setNombre(nuevoNombre);

            if (tblChatsFotos4.getRowCount() > 0)
            {
                byte[] nuevaImagenBytes = obtenerBytesDesdeTabla(tblChatsFotos4, 0, 0);
                chatActualizado.setImagen(nuevaImagenBytes);
            }

            // Mantener los integrantes y mensajes actuales
            chatActualizado.setIntegrantes(integrantesActuales);
            chatActualizado.setMensajes(mensajesActuales);

            chatNegocio.actualizarChat(chatActualizado);

            if (tblChatsFotos4.getRowCount() > 0)
            {
                actualizarImagenEnTabla(chatActualizado.getImagen());
            }

            JOptionPane.showMessageDialog(this, "Chat actualizado correctamente.");

            frmChat frm = new frmChat(usuarioNegocio, chatNegocio, u);
            frm.setVisible(true);
            this.dispose();
        } catch (NegocioException ex)
        {
            JOptionPane.showMessageDialog(this, "Error al actualizar el chat: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(frmVerDetalles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private byte[] obtenerBytesDesdeTabla(JTable table, int row, int column) {
        Object value = table.getValueAt(row, column);
        if (value instanceof byte[])
        {
            return (byte[]) value;
        } else
        {
            throw new ClassCastException("El valor de la celda no es de tipo byte[]");
        }
    }

    /**
     * Método para actualizar la imagen en la tabla tblChatsFotos4.
     */
    private void actualizarImagenEnTabla(byte[] nuevaImagenBytes) {
        // Suponiendo que la imagen está en la primera fila y primera columna
        ImageRenderer2 renderer = new ImageRenderer2(nuevaImagenBytes);
        TableColumn columnaImagen = tblChatsFotos4.getColumnModel().getColumn(0);
        columnaImagen.setCellRenderer(renderer);

        // Actualizar la tabla para reflejar los cambios
        DefaultTableModel modeloTabla = (DefaultTableModel) tblChatsFotos4.getModel();
        modeloTabla.fireTableDataChanged();
    }

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        frmChat frm = new frmChat(usuarioNegocio, chatNegocio, u);
        frm.show();
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void fldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fldNombreActionPerformed

    private void btnEncontrarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncontrarImagenActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();

        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = fileChooser.getSelectedFile();

            try
            {
                byte[] imageBytes = Files.readAllBytes(selectedFile.toPath());

                tblChatsFotos4.setModel(new javax.swing.table.DefaultTableModel(
                        new Object[][]
                        {
                            {
                                imageBytes
                            }
                        },
                        new String[]
                        {
                            "Imagen"
                        }
                ));
                tblChatsFotos4.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer2(imageBytes));
            } catch (IOException ex)
            {
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_btnEncontrarImagenActionPerformed

    private void configurarTablaChats() {
        DefaultTableModel modeloTabla = (DefaultTableModel) tblChatsFotos4.getModel();
        TableColumnModel modeloColumnas = tblChatsFotos4.getColumnModel();
        modeloTabla.setRowCount(0);
        modeloColumnas.getColumn(0).setCellRenderer(new ImageRenderer2(null)); // Inicializar con un renderizador de imagen vacío
    }

    private void configurarComboBoxChats() {
        try
        {
            // Obtener los chats del usuario
            List<ChatDTO> chats = chatNegocio.obtenerChatsDeUsuario(u.getId());

            // Limpiar el ComboBox
            ChatsComboBox.removeAllItems();

            // Añadir los nombres de los chats al ComboBox
            for (ChatDTO chat : chats)
            {
                ChatsComboBox.addItem(chat.getNombre());
            }
        } catch (NegocioException ex)
        {
            Logger.getLogger(frmVerDetalles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ChatsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChatsComboBoxActionPerformed
        // TODO add your handling code here:
        int selectedIndex = ChatsComboBox.getSelectedIndex();
        if (selectedIndex != -1)
        {
            try
            {
                List<ChatDTO> chats = chatNegocio.obtenerChatsDeUsuario(u.getId());
                ChatDTO chatSeleccionado = chats.get(selectedIndex);
                chatIdSel = chatSeleccionado.getId();

                fldNombre.setText(chatSeleccionado.getNombre());

                byte[] imagenBytes = chatSeleccionado.getImagen();
                if (imagenBytes != null)
                {
                    DefaultTableModel modeloTabla = (DefaultTableModel) tblChatsFotos4.getModel();
                    modeloTabla.setRowCount(0);
                    modeloTabla.addRow(new Object[]
                    {
                        imagenBytes
                    });
                    tblChatsFotos4.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer2(imagenBytes));
                }

                // Cargar integrantes y mensajes en variables
                integrantesActuales = chatSeleccionado.getIntegrantes();
                mensajesActuales = chatSeleccionado.getMensajes();

            } catch (NegocioException ex)
            {
                Logger.getLogger(frmVerDetalles.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ChatsComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ChatsComboBox;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEncontrarImagen;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JTextField fldNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane tbl;
    private javax.swing.JTable tblChatsFotos4;
    // End of variables declaration//GEN-END:variables
}
